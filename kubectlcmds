#kubectl create deployment kubernetes-bootcamp --image=gcr.io/google-samples/kubernetes-bootcamp:v1

#kubectl get deployments

#kubectl get pods -o wide

#kubectl expose deployment/kubernetes-bootcamp --type="NodePort" --port 80    (port number is what the container is running)

#kubectl exec -ti $POD_NAME curl localhost:8080


#kubectl scale deployments/kubernetes-bootcamp --replicas=4

#kubectl get pods -o wide

#kubectl cluster-info

#kubectl api-resources

# etcdrun endpoint status

#etcdrun member list

#etcdrun endpoint status --cluster -w table

#etcd -version
etcd Version: 3.3.11
Git SHA: 2cf9e51
Go Version: go1.15.2
Go OS/Arch: linux/amd64

#sudo systemctl status etcd

#sudo etcdrun endpoint status

#etcdrun member remove d619243fdcdba994

# etcdrun member add sserver-ctrlplane03  --peer-urls=https://serverctrlplane01:2380

 # etcdrun member add server-ctrlplane03  --peer-urls=https://server-ctrlplane03:2380

 # etcdrun endpoint status

#systemctl status kube-apiserver.service




______________________________________________________________


#####k8scmd to create pod #####

kubectl run nginx-pod --image=nginx:latest -n sai

kubectl expose pod nginx-pod --type=NodePort --port=80 -n sai

### k8scmd deployment######

kubectl create deployment nginx-deployment --image=nginx:latest -n sai

kubectl expose deployment nginx-deployment --type=NodePort --port=80 -n sai

#####


#####deploy file#####
#cat deploy.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80

##svc file##

apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx
  ports:
  - name: http
    port: 80
    targetPort: 80
  type: NodePort



